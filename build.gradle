plugins {
    id 'fabric-loom' version '0.11-SNAPSHOT'
    id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
    mavenCentral();
    mavenLocal()
    maven {
        name "Sonatype Snapshots"
        url "https://s01.oss.sonatype.org/content/repositories/snapshots/"
    }
    maven {
        name "Fabric"
        url "https://maven.fabricmc.net"
    }
    maven {
        url 'https://jitpack.io'
    }
    maven {
        url 'https://quantumfusion.dev/maven'
    }
}

loom {
    accessWidenerPath  = file("src/main/resources/dashloader.accesswidener")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings_version}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.fabric_loader_version}"

    // TODO j√°kob if you need modmenu uncomment this and in gradle.properties - !alpha
    // modImplementation "com.terraformersmc:modmenu:$project.modmenu_version"

    implementation "dev.quantumfusion.dashloader:dashloader-core:$project.dashloader_core_version"
    include "dev.quantumfusion.dashloader:dashloader-core:$project.dashloader_core_version"

    implementation "dev.quantumfusion:hyphen:0.2.0"
    include "dev.quantumfusion:hyphen:0.2.0"

    implementation "dev.quantumfusion:Taski:1.1.0"
    include "dev.quantumfusion:Taski:1.1.0"

    implementation 'com.github.luben:zstd-jni:1.5.2-2'
    include 'com.github.luben:zstd-jni:1.5.2-2'



    testImplementation(platform('org.junit:junit-bom:5.7.2'))
    testImplementation('org.junit.jupiter:junit-jupiter:5.7.2')

    modCompileOnly fabricApi.module("fabric-renderer-indigo", "0.48.0+1.18.2");
    modCompileOnly fabricApi.module("fabric-textures-v0", "0.48.0+1.18.2");
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
    }
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    // ensure that the encoding is set to UTF-8, no matter what the system default is
    // this fixes some edge cases with special characters not displaying correctly
    // see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
    // If Javadoc is generated, this must be specified in that task too.
    it.options.encoding = "UTF-8"

    // Minecraft 1.17 (21w19a) upwards uses Java 16.
    it.options.release = 17
}

java {
    //include sources in maven publish
    withSourcesJar()
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.archivesBaseName}" }
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            from components.java
        }
    }
}